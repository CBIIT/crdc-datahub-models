name: Update Model Version

on:
  workflow_dispatch:
  push:
    branches:
      - CRDCDH-1335
  pull_request:
    branches:
      - CRDCDH-1335

jobs:
  update-model-version:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the new-structure branch
        uses: actions/checkout@v3
#        with:
#          ref: CRDCDH-1335

      - name: test
        run: |
          echo "Hello"

      - name: Read content.json
        id: read_json
        run: |
          cat content.json
          echo "::set-output name=json_content::$(cat content.json)"

#
#
#      - name: Use JSON content
#        run: |
#          echo "Content of content.json:"
#          echo "${{ steps.read_json.outputs.json_content }}"
#      - name: List files in cache directory
#        run: ls -al cache

#      - name: Echo content.json contents
#        run: cat cache/content.json

#        with:
#          node-version: '16'
#      - name: test
#        run: |
#          echo "Hello"
#
#      - name: Print current versions
#        run: |
#          content=$(cat $GITHUB_WORKSPACE/cache/content.json)
#          echo "$content"
#      - name: Read model version
#        id: read-model-version
#        run: |
#          model_version=$(grep '^Version:' path/to/model.yaml | sed 's/[vV]//')
#          echo "::set-output name=model_version::$model_version"




#
#      - name: List files in cache directory
#        run: ls -al cache

#      - name: Print current versions
#        run: |
#          content=$(cat cache/content.json)
#          echo "$content" | jq -r 'to_entries[] | "\(.key): \(.value["current-version"])"'
#
#      - name: Check if versions are different
#        id: version-check
#        run: |
#          if [ "${{ steps.read-model-version.outputs.model_version }}" != "${{ steps.read-current-version.outputs.current_version }}" ]; then
#            echo "::set-output name=update_needed::true"
#          else
#            echo "::set-output name=update_needed::false"
#          fi
#
#      - name: Update cache folder if versions differ
#        if: steps.version-check.outputs.update_needed == 'true'
#        run: |
#          new_version=${{ steps.read-model-version.outputs.model_version }}
#          current_version=${{ steps.read-current-version.outputs.current_version }}
#
#          # Create new version folder
#          mkdir -p cache/${{ secrets.DATA_COMMONS }}/$new_version
#
#          # Copy current version content to new version folder
#          cp -r cache/${{ secrets.DATA_COMMONS }}/$current_version/* cache/${{ secrets.DATA_COMMONS }}/$new_version/
#
#          # Copy model files to new version folder
#          cp path/to/model/files/* cache/${{ secrets.DATA_COMMONS }}/$new_version/
#
#          # Update content.json
#          jq --arg new_version "$new_version" '.versions += [$new_version]' cache/content.json > cache/content.json.tmp && mv cache/content.json.tmp cache/content.json
#          jq --arg new_version "$new_version" '.["current-version"] = $new_version' cache/content.json > cache/content.json.tmp && mv cache/content.json.tmp cache/content.json
#
#      - name: Commit changes
#        if: steps.version-check.outputs.update_needed == 'true'
#        run: |
#          git config --global user.name 'github-actions[bot]'
#          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#          git add cache/
#          git commit -m "Update model version to ${{ steps.read-model-version.outputs.model_version }}"
#          git push